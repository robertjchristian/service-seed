/*
 * Copyright 2013 Netflix, Inc.
 *
 *      Licensed under the Apache License, Version 2.0 (the "License");
 *      you may not use this file except in compliance with the License.
 *      You may obtain a copy of the License at
 *
 *          http://www.apache.org/licenses/LICENSE-2.0
 *
 *      Unless required by applicable law or agreed to in writing, software
 *      distributed under the License is distributed on an "AS IS" BASIS,
 *      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *      See the License for the specific language governing permissions and
 *      limitations under the License.
 */

subprojects {
    // Checkstyle
    apply plugin: 'checkstyle'
    tasks.withType(Checkstyle) { ignoreFailures = true }
    checkstyle {
        ignoreFailures = true // Waiting on GRADLE-2163
        configFile = rootProject.file('codequality/checkstyle.xml')
    }

    // FindBugs
    apply plugin: 'findbugs'
    tasks.withType(FindBugs) { 
        reports.html.enabled true 
        reports.xml.enabled false
    }

    // Ignore failures for now, reporting should be sufficient.
    // In the near-term, introduce annotations and IDE plugins
    // so that failures are easier to deal with.
    findbugs {       
        effort = "min"
        ignoreFailures = true       
    }

    // PMD
    apply plugin: 'pmd'
    tasks.withType(Pmd) { 
        reports.html.enabled true 
        reports.xml.enabled false
    }

    apply plugin: 'cobertura'
    cobertura {
        sourceDirs = sourceSets.main.java.srcDirs
        format = 'html'
        includes = ['**/*.java', '**/*.groovy']
        excludes = []
    }
}
