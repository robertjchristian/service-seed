apply plugin: 'war'
apply plugin: 'jetty'

// set base name (impacts war name and context path)
project.war.baseName = "hello-world"

// Establish version and status
ext.githubProjectName = rootProject.name // Change if github project name is not the same as the root project's name

buildscript {
    repositories { mavenCentral() }
    apply from: file('../gradle/buildscript.gradle'), to: buildscript
}

allprojects {
    repositories { mavenCentral() }
}

apply from: file('../gradle/convention.gradle')
apply from: file('../gradle/maven.gradle')
apply from: file('../gradle/check.gradle')
apply from: file('../gradle/license.gradle')

war {
    from('resources') {
        include '*.properties'
        into 'WEB-INF/classes/'
    }
    webXml = file('src/main/webapp/WEB-INF/web.xml')
}

dependencies {

    // before moving to log4j2, need to fix
    // compatibility issue with custom audit appender
    // logging dependencies based on
    // http://logging.apache.org/log4j/2.x/log4j-slf4j-impl/dependencies.html
    //compile "org.apache.logging.log4j:log4j-api:2.0-beta6"
    //compile "org.slf4j:slf4j-api:1.7.2"
    //compile "org.slf4j:slf4j-ext:1.7.2"

    compile 'org.slf4j:slf4j-api:1.7.0'
    runtime 'org.slf4j:slf4j-simple:1.7.0'

    compile "com.netflix.karyon:karyon-extensions:${karyonVersion}"
    compile project(':karyon-admin-web')
    compile project(':service-framework')
}

jettyRun.doFirst {
    // use the default port of the ws-backend-simulation module
    System.setProperty("archaius.deployment.applicationId", "hello-world")
    System.setProperty("archaius.deployment.environment", "dev")

    // we only use jettyRun in dev... might as well output log4j debug
    System.setProperty("log4j.debug", "true")

}

jettyRun {
    httpPort = 8989
    reload = 'automatic'
    scanIntervalSeconds = 3
    daemon = false
}
